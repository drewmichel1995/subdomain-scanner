from flask import Flask, abort, redirect, url_for, render_template, request
from flask_cors import CORS, cross_origin
import json
import os

rootDir = '../output/'
app = Flask(__name__, template_folder=rootDir)
CORS(app)


@app.route('/')
def root():
    return render_template('index.json')


@app.route('/<path:path>')
def get_dir(path):
    return render_template(path + '/' + path + '.json')
#    return render_template(path + '.html')


@app.route('/getPendingScans', methods=['GET'])
def get_pending_scans():
    try:
        domains = list()
        if os.path.isfile('../input/domains/domains.txt'):
            with open('../input/domains/domains.txt', 'r') as outfile:
                for line in outfile:
                    domains.append(line.replace('\r\n', ''))
    except IOError:
        return json.dumps({'success': domain}), 200, {'ContentType': 'application/json'}

    return json.dumps(domains)


@app.route('/deletePendingScan', methods=['POST'])
def delete_pending_scan():
    if request.method == 'POST':
        data = request.form
        domain = ''
        new_domains = list()
        for name in data.iteritems():
            domain = name[1]
        try:
            with open("../input/domains/domains.txt", "rw+") as myFile:
                for line in myFile:
                    print(line.strip())
                    if line.strip() != domain.strip():
                        new_domains.append(line.strip())

                myFile.seek(0)
                myFile.truncate()
                for name in new_domains:
                    myFile.write(name + '\r\n')

            return json.dumps({'success': domain}), 200, {'ContentType': 'application/json'}
        except IOError:
            return json.dumps({'success': domain}), 200, {'ContentType': 'application/json'}


@app.route('/getAvailableDomains', methods=['GET'])
def get_available_domains():
    try:
        search_dir = '../output'
        files = []
        for x in os.listdir(search_dir):
            if os.path.isdir(os.path.join(search_dir, x)):
                files.append(x)

        with open('../output/index.json', 'w') as outfile:
            outfile.write(json.dumps(files))
            outfile.close()

        return json.dumps(files)
    except IOError:
        json.dumps({'success': False}), 501, {'ContentType': 'application/json'}


@app.route('/addDomain', methods=['GET', 'POST', 'DELETE'])
def add_domain():
    if request.method == 'POST':
        data = request.form  # a multi-dict containing POST data
        with open("../input/domains/domains.txt", "a") as myFile:
            myFile.write(data['name'] + "\r\n")

        return json.dumps({'success': True}), 200, {'ContentType': 'application/json'}


@app.route('/scanDomains', methods=['GET'])
def scan_domain():
    try:
        os.system("python ../tools/graph-data.py")
        return json.dumps({'success': True}), 200, {'ContentType': 'application/json'}
    except IOError:
        return json.dumps({'success': True}), 200, {'ContentType': 'application/json'}


if __name__ == "__main__":
    app.run(debug=True, host='0.0.0.0')
